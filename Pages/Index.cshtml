@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<script type="text/javascript" src="/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript">
    function disableUploadButton() {
        var btn = document.getElementById('Upload');
        btn.disabled = true;
        btn.value = 'Loading Image';
        btn.style.backgroundColor = "#6EDE00";
    }
    
    $(document).ready(function() {
        $("#cbnbuttoninstructions").click(function(){
            var x = document.getElementById("cbn-instructions");
            var y = document.getElementById("cbnbuttoninstructions");
            if (x.style.display === "none") {
                x.style.display = "block";
                y.value ="Hide Instructions";
            } else {
                x.style.display = "none";
                y.value ="Show Instructions";
            }
        }); 
    });
</script>
<form enctype="multipart/form-data" method="post" onsubmit="disableUploadButton()">
<div class="cbn-header-container">
        <div class="cbn-header-content">
            <span class="cbn-header-content-title">Step 1: &nbsp;Select Image File</span>
            <input asp-for="FormFile" type="file">
        </div>
        <div class="cbn-header-content">
            <span class="cbn-header-content-title">Step 2: &nbsp;Select Settings</span>
            <table class="cbn-settings-table">
                <tr>
                    <td>Normalize:</td>
                    <td>
                        <input type="checkbox" name="Normalize" id="Normalize" asp-for="Normalize" value="true" checked="@Model.Normalize" />
                    </td>
                    <td>
                        <input type="text" size="5" name="NormalizeFactor" id="NormalizeFactor" asp-for="NormalizeFactor" value="@Model.NormalizeFactor" />
                    </td>
                </tr>
                <tr>
                    <td>Soften:</td>
                    <td>            
                        <input type="checkbox" name="Soften" id="Soften" asp-for="Soften" value="true" checked="@Model.Soften" />
                    </td>
                </tr>
                <tr>
                    <td>Clean:</td>
                    <td><input type="checkbox" name="Clean" id="Clean" asp-for="Clean" value="true" checked="@Model.Clean" /></td>
                </tr>
                <tr>
                    <td>Sim Distance:</td>
                    <td><input type="text" size="5" name="SimilarityDistance" id="SimilarityDistance" asp-for="SimilarityDistance" value="@Model.SimilarityDistance" /></td>
                </tr>
                @*<tr>
                    <td>Email Results:</td>
                    <td>
                        <input type="email" size="5" name="EmailAddress" id="EmailAddress" asp-for="EmailAddress" value="@Model.EmailAddress" />
                    </td>
                </tr>*@
                <tr>
                    <td>Resize First:</td>
                    <td>
                        <input type="checkbox" name="Resize" id="Resize" asp-for="Resize" value="true" checked="@Model.Resize" />
                    </td>
                </tr>
                <tr>
                    <td>PDF Only:</td>
                    <td>
                        <input type="checkbox" name="PdfOnly" id="PdfOnly" asp-for="PdfOnly" value="true" checked="@Model.PdfOnly" />
                    </td>
                </tr>
                <tr>
                    <td>Debug Info:</td>
                    <td><input type="checkbox" name="ShowDebug" id="ShowDebug" asp-for="ShowDebug" value="true" checked="@Model.ShowDebug" /></td>
                </tr>
                @if (!String.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <tr>
                        <td>Error Message:</td>
                        <td><input type="checkbox" name="ShowDebug" id="ShowDebug" asp-for="ShowDebug" value="true" checked="@Model.ShowDebug" /></td>
                    </tr>
                }
            </table>    
        </div>
        <div class="cbn-header-content">
                <span class="cbn-header-content-title">Step 3: &nbsp;Upload</span>
                <input asp-page-handler="Upload" id="Upload" class="cbn-button-upload" type="submit" value="Upload" />
        </div>
</div>
</form>
<div class="cbn-button-panel">
    <input id="cbnbuttoninstructions" class="cbn-button-instructions" type="button" value="Show Instructions" />
</div>
<div id="cbn-instructions" class="cbn-instructions" style="display:none;">
    <p>
        <b>Info about each of the options:</b>
    </p>
    <p>
        <b>Normalize -</b> This will round each RGB value to the nearest <i>N</i> value specified (eg 57, 123, 245 rounded to nearest 50 will result in 50, 100, 250).<br />
                    This slightly alters each color present, but allows the algorithm to have a smaller selection of colors to choose from. Default is off.
    </p>
    <p>
        <b>Soften -</b> This will go through pixel by pixel and round each pixel to the average of its neighbors.<br />
                 This results in a slightly blurred image with the goal of allowing the algorithm to again have a smaller selection of colors to choose from. Default is off.
    </p>
    <p>
        <b>Clean -</b> A quick algorithm that goes through and removes any insignificant areas of color (ie color areas that are smaller than 4 pixels).<br />
            Default is on.
    </p>
    <p>
        <b>Sim Distance -</b> AKA Similarity Distance is the value used to determine whether two colors are similar. The lower the number the more similar colors must be as determined by their CIELAB color.<br />
                   Lower this number if you want more colors, raise it if you want want fewer. Default is 28.0.
    </p>
    <p>
        <b>Resize First -</b> This will resize the image to it's final size before calculations (Final size is scaled to fit a 720px x 960px pdf document).<br />
                   On means a faster calculation, but less detailed result. Default is on.
    </p>
    <p>
        <b>PDF Only -</b> This will return the PDF document to be saved, good for mobile users.<br />
               Default is off.
    </p>
    <p>
        <b>Debug Info -</b> Slightly misleading as this doesn't really provide any true debug info. If on, it will return all the different stages instead of just the original, and final result (eg it will also return the Normalized image if on).<br />
        Default is off.
    </p>
</div>
<div class="cbn-images-wrapper">
    @if (Model.Original != null)
    {
        <table class="cbn-results-table">
            @if (Model.PdfBytes != null)
            {
                <tr><td>Pdf:</td></tr>
                <tr>
                    <td>
                        <object width="400" height="400" data="@String.Format("data:application/pdf;base64,{0}", Convert.ToBase64String(Model.PdfBytes))"></object>
                    </td>
                </tr>
            }
            @if (Model.ShowDebug)
            {
                <tr><td>Color Palette:</td></tr>
                <tr>
                    <td>
                        @for (int i = 0; i < Model.TopColors.Count; i++)
                        {
                            <div style="background-color:#@Model.TopColors[i].StoredColor.ToHex().Remove(6,2)">@(i+1)</div>
                        }
                    </td>
                </tr>
            }
            <tr><td>Original:</td></tr>
            <tr>
                <td>
                    <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.Original))">
                </td>
            </tr>
            @if (Model.NormalizedBytes != null)
            {
                <tr><td>Normalized:</td></tr>
                <tr>
                    <td>
                        <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.NormalizedBytes))" />
                    </td>
                </tr>
            }
            @if (Model.SoftenedBytes != null)
            {       
                <tr><td>Softened:</td></tr>
                <tr>
                    <td>
                        <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.SoftenedBytes))" />
                    </td>
                </tr>
            }
            @if (Model.PBCBytes != null)
            {
                <tr><td>PBC:</td></tr>
                <tr>
                    <td>
                        <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.PBCBytes))" />
                    </td>
                </tr>
            }
            @if (Model.CleanedBytes != null)
            {
               <tr><td>Cleaned:</td></tr>
                <tr>
                    <td>
                        <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.CleanedBytes))" />
                    </td>
                </tr>
            }
            @if (Model.OutlineBytes != null)
            {
                <tr><td>Final:</td></tr>
                <tr>
                    <td>
                        <img class="cbn-image-max" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.OutlineBytes))" />
                    </td>
                </tr>
            }
        </table>
    }
</div>



